build-wallet-web:
  image: "${HARBOR_REGISTRY}/${HARBOR_PROJECT}/nl-wallet-app-builder-ci-node:${BUILD_TAG}"
  rules: !reference [.default-or-release-or-merge-request, rules]
  variables:
    VITE_HELP_BASE_URL: ${WALLET_WEB_HELP_BASE_URL}
  script:
    - set -euxo pipefail
    - (cd wallet_web; npm ci && npm run format-check && npm run lint && npm run type-check && npm run coverage -- --run)
    - (cd wallet_web; npm run build)
    # copy the built files to the demo utils assets folder
    - cp wallet_web/dist/nl-wallet-web.iife.js wallet_core/demo/demo_utils/assets/
  after_script:
    - deploy/bin/store-artifact.sh wallet_web/test-results/junit.xml qt/quality-time/junit-results/web.xml
    - deploy/bin/store-artifact-zip.sh qt/quality-time/allure-results/web.zip wallet_web/allure-results/*
  artifacts:
    name: wallet-web
    reports:
      junit: wallet_web/test-results/junit.xml
    paths:
      - wallet_web/dist
      - wallet_web/coverage
      - wallet_web/test-results
      - wallet_web/allure-results
      - wallet_core/demo/demo_utils/assets/nl-wallet-web.iife.js

test-bindings:
  extends: .rust
  rules: !reference [.default-or-release-or-merge-request, rules]
  script:
    - cargo test --manifest-path wallet_core/Cargo.toml --locked export_bindings --features ts_rs
    - npx prettier --write wallet_web/lib/models/*.ts
    - git diff
    - if [[ $(git diff --shortstat | wc -l) -gt 0 ]]; then echo "Bindings generation results in different files!"; exit 1; fi
