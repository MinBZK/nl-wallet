.zap-scan-common-setup:
  image: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-ci-quality:${BUILD_TAG}"
  extends: .env-ont-k8s
  rules:
    - !reference [ .on-schedule, rules ]
    - !reference [ .default-branch, rules ]
  allow_failure: true
  artifacts:
    when: always
    paths:
      - zapreports/
  before_script:
    - mkdir zapreports

.run-zap-scan:
  script:
    - |
      envsubst < deploy/zap/${SUT}_zap_scan.yaml > ${ZAP_HOME}/${SUT}_zap_scan.yaml
      zap.sh -cmd -autorun ${SUT}_zap_scan.yaml
      ALERT_COUNT=$(jq '[.site[].alerts[] | select(.riskdesc | contains("Informational") | not) | select(.riskdesc | contains("False Positive") | not)] | length' zapreports/${SUT}-zap.json)
      if [ "$ALERT_COUNT" -gt 0 ]; then
        echo "ZAP Scan Completed: Non informational alerts found: $ALERT_COUNT"
        exit 1
      else
        echo "ZAP Scan Completed: No non informational alerts found"
      fi

.get-session-token:
  script:
    - |
      envsubst < deploy/zap/get_session_token_payload.json > deploy/zap/get_session_token_payload_temp.json
      SESSION_TOKEN=$(curl -s -X POST -d @deploy/zap/get_session_token_payload_temp.json -H "Content-Type: application/json" "${INTERNAL_WALLET_SERVER_URL}/disclosure/sessions" | jq -r '.session_token')      

zap-scan-rp:
  extends: .zap-scan-common-setup
  needs:
    - job: deploy-mock-relying-party-ont
      artifacts: false
      optional: true
  script:
    - !reference [.run-zap-scan, script]
  variables:
    RELYING_PARTY_URL: "https://${EXTERNAL_HOSTNAME_ONT}/${MOCK_RELYING_PARTY_EXTERNAL_CONTEXT_PATH}"
    SUT: "RELYING_PARTY"

zap-scan-config-server:
  extends: .zap-scan-common-setup
  script:
    - !reference [.run-zap-scan, script]
  variables:
    CONFIG_SERVER_HOST: "${STATIC_EXTERNAL_HOSTNAME_ONT}"
    SUT: "CONFIG_SERVER"

zap-scan-wallet-provider:
  extends: .zap-scan-common-setup
  needs:
    - job: deploy-wallet-provider-ont
      artifacts: false
      optional: true
  script:
    - envsubst < deploy/zap/config/WALLET_PROVIDER_urls.txt > ${ZAP_HOME}/WALLET_PROVIDER_urls.txt
    - !reference [.run-zap-scan, script]
  variables:
    WALLET_PROVIDER_BASE_URL: "https://${EXTERNAL_HOSTNAME_ONT}/${WALLET_PROVIDER_EXTERNAL_CONTEXT_PATH}"
    SUT: "WALLET_PROVIDER"

zap-scan-pid-issuer:
  extends: .zap-scan-common-setup
  needs:
    - job: deploy-pid-issuer-ont
      artifacts: false
      optional: true
  script:
    - envsubst < deploy/zap/config/PID_ISSUER_urls.txt > ${ZAP_HOME}/PID_ISSUER_urls.txt
    - !reference [.run-zap-scan, script]
  variables:
    PID_ISSUER_BASE_URL: "https://${EXTERNAL_HOSTNAME_ONT}/${PID_ISSUER_EXTERNAL_CONTEXT_PATH}"
    SUT: "PID_ISSUER"

zap-scan-internal-wallet-server:
  extends: .zap-scan-common-setup
  needs:
    - job: deploy-mock-relying-party-ont
      artifacts: false
      optional: true
  script:
    - !reference [.get-session-token, script]
    - |
      yq e ".servers[0].url=\"${INTERNAL_WALLET_SERVER_URL}\"" -i documentation/api/wallet-disclosure-private.openapi.yaml
      sed -i 's|wallet-disclosure-components.openapi.yaml#|#|g' documentation/api/wallet-disclosure-private.openapi.yaml
      sed -i "s|{session_token}|${SESSION_TOKEN}|g" documentation/api/wallet-disclosure-private.openapi.yaml
      yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' documentation/api/wallet-disclosure-private.openapi.yaml documentation/api/wallet-disclosure-components.openapi.yaml > ${ZAP_HOME}/merged-internal-wallet-disclosure.openapi.yaml
    - !reference [.run-zap-scan, script]
  variables:
    INTERNAL_WALLET_SERVER_URL: "https://${MRP_VERIFICATION_SERVER_INTERNAL_HOSTNAME_ONT}"
    RELYING_PARTY_URL: "https://${EXTERNAL_HOSTNAME_ONT}/${MOCK_RELYING_PARTY_EXTERNAL_CONTEXT_PATH}"
    SUT: "INTERNAL_WALLET_SERVER"

zap-scan-public-wallet-server:
  extends: .zap-scan-common-setup
  needs:
    - job: deploy-mock-relying-party-ont
      artifacts: false
      optional: true
  script:
    - !reference [.get-session-token, script]
    - |
      yq e ".servers[0].url=\"${PUBLIC_WALLET_SERVER_URL}\"" -i documentation/api/wallet-disclosure-public.openapi.yaml
      sed -i 's|wallet-disclosure-components.openapi.yaml#|#|g' documentation/api/wallet-disclosure-public.openapi.yaml
      sed -i "s|application/x-www-form-urlencoded|application/json|g" documentation/api/wallet-disclosure-public.openapi.yaml
      sed -i "s|{session_token}|${SESSION_TOKEN}|g" documentation/api/wallet-disclosure-public.openapi.yaml
      yq eval-all 'select(fileIndex == 0) * select(fileIndex == 1)' documentation/api/wallet-disclosure-public.openapi.yaml documentation/api/wallet-disclosure-components.openapi.yaml > ${ZAP_HOME}/merged-public-wallet-disclosure.openapi.yaml
    - !reference [.run-zap-scan, script]
  variables:
    INTERNAL_WALLET_SERVER_URL: "https://${MRP_VERIFICATION_SERVER_INTERNAL_HOSTNAME_ONT}"
    PUBLIC_WALLET_SERVER_URL: "https://${EXTERNAL_HOSTNAME_ONT}/${MRP_VERIFICATION_SERVER_EXTERNAL_CONTEXT_PATH}"
    RELYING_PARTY_URL: "https://${EXTERNAL_HOSTNAME_ONT}/${MOCK_RELYING_PARTY_EXTERNAL_CONTEXT_PATH}"
    SUT: "PUBLIC_WALLET_SERVER"

zap-scan-publish-results:
  rules: !reference [.zap-scan-common-setup, rules]
  needs:
    - { job: zap-scan-rp }
    - { job: zap-scan-config-server }
    - { job: zap-scan-wallet-provider }
    - { job: zap-scan-pid-issuer }
    - { job: zap-scan-internal-wallet-server }
    - { job: zap-scan-public-wallet-server }
  script:
    - zip zap.zip zapreports/*.xml
    - deploy/bin/store-artifact.sh zap.zip qt/quality-time/
