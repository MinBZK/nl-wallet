apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.componentSelectorLabels" (list "server" .) | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 300
  template:
    metadata:
      labels:
        {{- include "common.labels.componentSelectorLabels" (list "server" .) | nindent 8 }}
        {{- if .Values.extraPodlabels }}
        {{- toYaml .Values.extraPodlabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "common.names.fullname" . }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8001
          env:
            - name: TZ
              value: "Europe/Amsterdam"
            - name: RUST_LOG
              value: "debug,hyper=warn"

            - name: WALLET_PROVIDER__DATABASE__NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: database
            - name: WALLET_PROVIDER__DATABASE__HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: host
            - name: WALLET_PROVIDER__DATABASE__USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: username
            - name: WALLET_PROVIDER__DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: password
            - name: WALLET_PROVIDER__HSM__USER_PIN
              valueFrom:
                secretKeyRef:
                  name: nl-wallet-hsm-config
                  key: user_pin

            # Sources:
            # - https://www.apple.com/certificateauthority/Apple_App_Attestation_Root_CA.pem
            # - wallet_core/lib/apple_app_attest/assets/mock_ca.crt.pem
            - name: WALLET_PROVIDER__IOS__ROOT_CERTIFICATES
              value: {{ .Values.ios.rootCertificates }}
            - name: WALLET_PROVIDER__IOS__TEAM_IDENTIFIER
              value: {{ .Values.ios.teamIdentifier }}
            - name: WALLET_PROVIDER__IOS__BUNDLE_IDENTIFIER
              value: {{ .Values.appIdentifier }}

            # Source: https://developer.android.com/privacy-and-security/security-key-attestation#root_certificate
            - name: WALLET_PROVIDER__ANDROID__ROOT_PUBLIC_KEYS
              value: {{ .Values.android.rootPublicKeys }}
            - name: WALLET_PROVIDER__ANDROID__PLAY_STORE_CERTIFICATE_HASHES
              value: {{ .Values.configmap.playstoreCertificateHashes }}
            - name: WALLET_PROVIDER__ANDROID__ALLOW_SIDELOADING
              value: {{ .Values.android.allowSideLoading | quote }}
            - name: WALLET_PROVIDER__ANDROID__PACKAGE_NAME
              value: {{ .Values.appIdentifier }}
            - name: WALLET_PROVIDER__ANDROID__CREDENTIALS_FILE
              value: "/google-cloud-service-account.json"

            - name: WALLET_PROVIDER__HSM__MAX_SESSIONS
              value: {{ .Values.hsm.maxSessions | quote }}
            - name: WALLET_PROVIDER__HSM__MAX_SESSION_LIFETIME_IN_SEC
              value: {{ .Values.hsm.maxSessionLifeTimeInSec | quote }}

            - name: WALLET_PROVIDER__STRUCTURED_LOGGING
              value: "true"

            - name: CS_PKCS11_R3_CFG
              value: "/cs_pkcs11_R3.cfg"

          volumeMounts:
            - name: pkcs11-config-volume
              mountPath: /cs_pkcs11_R3.cfg
              subPath: {{ .Values.hsm.configMapKey }}
            - name: gcloud-service-account
              mountPath: /google-cloud-service-account.json
              subPath: {{ .Values.android.serviceAccount.secretKey }}
      volumes:
        - name: pkcs11-config-volume
          configMap:
            name: {{ .Values.hsm.configMapName }}
        - name: gcloud-service-account
          secret:
            secretName: {{ .Values.android.serviceAccount.secretName }}
