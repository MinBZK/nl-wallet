{{ $chart := . -}}

CHART NAME: {{ .Chart.Name }}
CHART VERSION: {{ .Chart.Version }}
APP VERSION: {{ .Chart.AppVersion }}

** Please be patient while the chart is being deployed **

To connect to your database from outside the cluster execute the following commands:

{{ if empty .Values.pgPools -}}
    ** PgBouncer is disabled, connect directly with the primary **

    kubectl port-forward --namespace {{ $chart.Release.Namespace }} svc/{{ $chart.Release.Name }}-r 5432:5432 &
    kubectl port-forward --namespace {{ $chart.Release.Namespace }} svc/{{ $chart.Release.Name }}-ro 5432:5432 &
    kubectl port-forward --namespace {{ $chart.Release.Namespace }} svc/{{ $chart.Release.Name }}-rw 5432:5432 &
{{ else -}}
    ** Only connecting via PgBouncer is allowed **
{{- range $pgPool := .Values.pgPools -}}
{{- if gt (int $pgPool.pool.replicas) 0 }}

    kubectl port-forward --namespace {{ $chart.Release.Namespace }} svc/{{ $chart.Release.Name }}-pooler-{{ $pgPool.pool.type }} 5432:5432 &

{{ end -}}
{{ end -}}
{{ end }}

To get the password for "{{ first .Values.databases }}" run:

    kubectl get secret --namespace {{ .Release.Namespace }} {{ $chart.Release.Name }}-{{ first .Values.databases | replace "_" "-" }} -o jsonpath="{.data.password}" | base64 -d


To get a list of installed database clusters run:

    kubectl get cluster --namespace {{ .Release.Namespace }}


To get a list of extra created databases run:

    kubectl get database --namespace {{ .Release.Namespace }}


To connect to the database from another pod apply the following label to your pod:

    {{ .Release.Name }}-access-database: allow
