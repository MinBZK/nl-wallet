// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'disclosure.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'card.freezed.dart';

class Card {
  final Organization issuer;
  final CardPersistence persistence;
  final String docType;
  final List<CardAttribute> attributes;

  const Card({
    required this.issuer,
    required this.persistence,
    required this.docType,
    required this.attributes,
  });

  @override
  int get hashCode => issuer.hashCode ^ persistence.hashCode ^ docType.hashCode ^ attributes.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is Card &&
          runtimeType == other.runtimeType &&
          issuer == other.issuer &&
          persistence == other.persistence &&
          docType == other.docType &&
          attributes == other.attributes;
}

class CardAttribute {
  final String key;
  final List<LocalizedString> labels;
  final CardValue value;

  const CardAttribute({
    required this.key,
    required this.labels,
    required this.value,
  });

  @override
  int get hashCode => key.hashCode ^ labels.hashCode ^ value.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CardAttribute &&
          runtimeType == other.runtimeType &&
          key == other.key &&
          labels == other.labels &&
          value == other.value;
}

@freezed
sealed class CardPersistence with _$CardPersistence {
  const CardPersistence._();

  const factory CardPersistence.inMemory() = CardPersistence_InMemory;
  const factory CardPersistence.stored({
    required String id,
  }) = CardPersistence_Stored;
}

@freezed
sealed class CardValue with _$CardValue {
  const CardValue._();

  const factory CardValue.string({
    required String value,
  }) = CardValue_String;
  const factory CardValue.boolean({
    required bool value,
  }) = CardValue_Boolean;
  const factory CardValue.date({
    required String value,
  }) = CardValue_Date;
  const factory CardValue.gender({
    required GenderCardValue value,
  }) = CardValue_Gender;
}

enum GenderCardValue {
  Unknown,
  Male,
  Female,
  NotApplicable,
  ;
}

class LocalizedString {
  final String language;
  final String value;

  const LocalizedString({
    required this.language,
    required this.value,
  });

  @override
  int get hashCode => language.hashCode ^ value.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LocalizedString &&
          runtimeType == other.runtimeType &&
          language == other.language &&
          value == other.value;
}
