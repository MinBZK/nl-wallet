// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'attestation.dart';
import 'disclosure.dart';
import 'image.dart';
import 'localize.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'instruction.freezed.dart';

@freezed
sealed class DisclosureBasedIssuanceResult with _$DisclosureBasedIssuanceResult {
  const DisclosureBasedIssuanceResult._();

  const factory DisclosureBasedIssuanceResult.ok(
    List<AttestationPresentation> field0,
  ) = DisclosureBasedIssuanceResult_Ok;
  const factory DisclosureBasedIssuanceResult.instructionError({
    required WalletInstructionError error,
  }) = DisclosureBasedIssuanceResult_InstructionError;
}

@freezed
sealed class PidIssuanceResult with _$PidIssuanceResult {
  const PidIssuanceResult._();

  const factory PidIssuanceResult.ok({
    required bool transferAvailable,
  }) = PidIssuanceResult_Ok;
  const factory PidIssuanceResult.instructionError({
    required WalletInstructionError error,
  }) = PidIssuanceResult_InstructionError;
}

@freezed
sealed class WalletInstructionError with _$WalletInstructionError {
  const WalletInstructionError._();

  const factory WalletInstructionError.incorrectPin({
    required int attemptsLeftInRound,
    required bool isFinalRound,
  }) = WalletInstructionError_IncorrectPin;
  const factory WalletInstructionError.timeout({
    required BigInt timeoutMillis,
  }) = WalletInstructionError_Timeout;
  const factory WalletInstructionError.blocked() = WalletInstructionError_Blocked;
}

@freezed
sealed class WalletInstructionResult with _$WalletInstructionResult {
  const WalletInstructionResult._();

  const factory WalletInstructionResult.ok() = WalletInstructionResult_Ok;
  const factory WalletInstructionResult.instructionError({
    required WalletInstructionError error,
  }) = WalletInstructionResult_InstructionError;
}

@freezed
sealed class WalletTransferInstructionResult with _$WalletTransferInstructionResult {
  const WalletTransferInstructionResult._();

  const factory WalletTransferInstructionResult.ok({
    required String transferUri,
  }) = WalletTransferInstructionResult_Ok;
  const factory WalletTransferInstructionResult.instructionError({
    required WalletInstructionError error,
  }) = WalletTransferInstructionResult_InstructionError;
}
