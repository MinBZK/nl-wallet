[package]
name = "wallet_account"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[[test]]
name = "registration"
path = "tests/registration.rs"
required-features = ["integration_test"]

[features]
client = ["dep:futures", "dep:p256", "dep:thiserror", "dep:platform_support", "dep:error_category"]
server = ["dep:p256", "dep:thiserror", "dep:apple_app_attest"]
integration_test = ["client", "server", "dep:rustls-pki-types", "dep:android_attest"]

[dependencies]
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["std", "raw_value"] }
serde_with = { workspace = true, features = ["base64"] }
strum = { workspace = true, features = ["derive"] }

jwt.path = "../jwt"
poa.path = "../poa"
wallet_common.path = "../wallet_common"

futures = { workspace = true, optional = true, features = ["std"] }
p256 = { workspace = true, optional = true, features = ["ecdsa", "pem", "std"] }
thiserror = { workspace = true, optional = true }
rustls-pki-types = { workspace = true, optional = true }

android_attest = { path = "../android_attest", optional = true, features = ["mock"] }
apple_app_attest = { path = "../apple_app_attest", optional = true }
platform_support = { path = "../platform_support", optional = true }
error_category = { path = "../error_category", optional = true }

[dev-dependencies]
assert_matches.workspace = true
futures = { workspace = true, features = ["std"] }
rand_core.workspace = true
rstest.workspace = true

apple_app_attest = { path = "../apple_app_attest", features = ["mock"] }
platform_support = { path = "../platform_support", features = ["mock_attested_key_apple"] }
wallet_common = { path = "../wallet_common", features = ["mock_secure_keys"] }
