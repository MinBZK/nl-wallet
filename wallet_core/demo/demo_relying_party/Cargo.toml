[package]
name = "demo_relying_party"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[features]
# Allow the disclosure return URL and its prefix to use http://
allow_insecure_url = ["openid4vc/allow_insecure_url"]
# Generate typescript bindings for wallet_web
ts_rs = []

[dependencies]
anyhow.workspace = true
askama.workspace = true
askama_web = { workspace = true, features = ["axum-0.8"] }
axum = { workspace = true, features = ["http1", "query", "tokio", "tower-log", "tracing"] }
base64.workspace = true
ciborium.workspace = true
config = { workspace = true, features = ["preserve_order", "toml"] }
futures = { workspace = true, features = ["std"] }
http.workspace = true
indexmap.workspace = true
itertools.workspace = true
reqwest = { workspace = true, features = ["rustls-tls-webpki-roots"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_urlencoded.workspace = true
strum = { workspace = true, features = ["derive"] }
tokio = { workspace = true, features = ["parking_lot", "rt-multi-thread", "net"] }
tower.workspace = true
tower-http = { workspace = true, features = ["trace", "fs"] }
tracing.workspace = true
tracing-subscriber = { workspace = true, features = [
    "std",
    "fmt",
    "tracing-log",
    "smallvec",
    "parking_lot",
    "env-filter",
    "json",
    "ansi",
] }
url = { workspace = true, features = ["serde"] }

attestation_data.path = "../../lib/attestation_data"
crypto.path = "../../lib/crypto"
dcql.path = "../../lib/dcql"
demo_utils.path = "../demo_utils"
http_utils = { path = "../../lib/http_utils", features = ["server"] }
openid4vc.path = "../../lib/openid4vc"
openid4vc_server = { path = "../../lib/openid4vc_server", features = ["disclosure"] }
server_utils.path = "../../wallet_server/server_utils"
utils = { path = "../../lib/utils" }

[dev-dependencies]
ts-rs.workspace = true
