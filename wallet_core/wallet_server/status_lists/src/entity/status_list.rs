//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "status_list")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub attestation_type_id: i16,
    #[sea_orm(unique)]
    pub external_id: String,
    pub available: i32,
    pub size: i32,
    pub next_sequence_no: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::attestation_type::Entity",
        from = "Column::AttestationTypeId",
        to = "super::attestation_type::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AttestationType,
}

impl Related<super::attestation_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AttestationType.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
