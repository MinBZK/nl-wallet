[package]
name = "issuance_server"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
exclude = ["resources"]

[lints]
workspace = true

[lib]
doctest = false

[[bin]]
name = "issuance_server"

[[test]]
name = "settings"
path = "tests/settings.rs"
required-features = ["integration_test"]

[features]
default = ["postgres"]
# Allow the disclosure return URL and its prefix to use http://
allow_insecure_url = ["openid4vc/allow_insecure_url"]
# Include session storage in PostgreSQL
postgres = ["server_utils/postgres", "dep:sea-orm"]
# Enable integration tests
integration_test = []

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
axum = { workspace = true, features = ["form", "http1", "json", "query", "tokio", "tower-log", "tracing"] }
config = { workspace = true, features = ["toml", "preserve_order"] }
chrono.workspace = true
futures = { workspace = true, features = ["std", "async-await"] }
itertools.workspace = true
indexmap.workspace = true
reqwest = { workspace = true, features = ["rustls-tls-webpki-roots"] }
rustls-pki-types.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_with = { workspace = true, features = ["base64"] }
serde_urlencoded.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["parking_lot", "rt-multi-thread", "net"] }
trait-variant.workspace = true

sea-orm = { workspace = true, optional = true, features = [
    "macros",
    "runtime-tokio-rustls",
    "sqlx-postgres",
    "with-chrono",
    "with-json",
] }

attestation_data.path = "../../lib/attestation_data"
attestation_types.path = "../../lib/attestation_types"
crypto.path = "../../lib/crypto"
dcql.path = "../../lib/dcql"
issuer_settings.path = "../issuer_settings"
hsm = { path = "../../lib/hsm", features = ["settings"] }
http_utils.path = "../../lib/http_utils"
openid4vc = { path = "../../lib/openid4vc", features = ["axum"] }
openid4vc_server = { path = "../../lib/openid4vc_server", features = ["issuance", "disclosure"] }
server_utils.path = "../server_utils"
utils.path = "../../lib/utils"

[dev-dependencies]
indexmap.workspace = true
p256 = { workspace = true, features = ["ecdsa"] }
tokio = { workspace = true, features = ["macros", "test-util"] }
