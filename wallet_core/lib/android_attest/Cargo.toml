[package]
name = "android_attest"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[[test]]
name = "certificate_chain"
path = "tests/certificate_chain.rs"
required-features = ["mock"]

[features]
# Accept attested keys from the emulator. This allows software security level.
allow_emulator_keys = ["dep:tracing"]
encode = []
mock = ["encode", "dep:der", "dep:rand", "dep:rcgen", "dep:time", "dep:x509-cert"]
network_test = []
# Derive Serialize for KeyAttestation and related types, to use in JSON APIs.
serialize_key_attestation = ["dep:bytes", "dep:cfg_eval", "dep:serde_repr"]

[dependencies]
bitflags.workspace = true
cfg-if.workspace = true
chrono = { workspace = true, features = ["serde", "now"] }
const-decoder.workspace = true
derive_more = { workspace = true, features = ["as_ref", "constructor", "debug"] }
futures.workspace = true
gcloud-auth = { workspace = true, features = ["rustls-tls"] }
http.workspace = true
http-cache-reqwest = { workspace = true, features = ["manager-moka"] }
int-enum.workspace = true
num-bigint.workspace = true
num-traits.workspace = true
nutype = { workspace = true, features = ["regex", "serde"] }
p256 = { workspace = true, features = ["std", "ecdsa", "pkcs8"] }
rasn = { workspace = true, features = ["std"] }
regex.workspace = true
reqwest = { workspace = true, features = ["json", "rustls-tls-webpki-roots"] }
reqwest-middleware.workspace = true
rsa = { workspace = true, features = ["std"] }
rustls-pki-types.workspace = true
rustls-webpki.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_with = { workspace = true, features = ["chrono", "base64"] }
spki = { workspace = true, features = ["std"] }
strum = { workspace = true, features = ["derive"] }
thiserror.workspace = true
tokio = { workspace = true, features = ["fs", "sync", "parking_lot"] }
url.workspace = true
x509-parser.workspace = true

bytes = { workspace = true, optional = true, features = ["serde"] }
cfg_eval = { workspace = true, optional = true }
der = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
rcgen = { workspace = true, optional = true, features = ["aws_lc_rs"] }
serde_repr = { workspace = true, optional = true }
time = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }
x509-cert = { workspace = true, optional = true, features = ["std"] }

[dev-dependencies]
assert_matches.workspace = true
p256 = { workspace = true, features = ["std", "ecdsa", "pem", "pkcs8"] }
rand.workspace = true
rstest.workspace = true
tokio = { workspace = true, features = ["macros", "parking_lot"] }
wiremock.workspace = true
