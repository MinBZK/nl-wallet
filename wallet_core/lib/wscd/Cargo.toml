[package]
name = "wscd"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[features]
# Include examples from the ISO specification
examples = []
mock = ["mock_remote_key", "dep:rand_core"]
# Include MockRemoteEcdsaKey type and MockRemoteKeyFactory implementation of KeyFactory for testing
mock_remote_key = ["crypto/mock_remote_key", "dep:parking_lot", "dep:rand_core"]

[dependencies]
derive_more = { workspace = true, features = ["as_ref", "from"] }
futures.workspace = true
jsonwebtoken.workspace = true
parking_lot = { workspace = true, optional = true }
p256 = { workspace = true, features = ["ecdsa"] }
serde = { workspace = true, features = ["derive"] }
thiserror.workspace = true

rand_core = { workspace = true, optional = true }

crypto.path = "../crypto/"
jwt.path = "../jwt"
utils.path = "../utils/"

[dev-dependencies]
assert_matches.workspace = true
parking_lot.workspace = true
rand_core.workspace = true
rstest.workspace = true
tokio = { workspace = true, features = ["macros"] }
