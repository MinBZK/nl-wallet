[package]
name = "wscd"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[features]
# Include examples from the ISO specification
examples = ["crypto/examples"]
# Include MockRemoteEcdsaKey type and MockRemoteWscd implementation of Wscd for testing
mock = ["crypto/mock", "dep:parking_lot", "dep:rand_core"]

[dependencies]
derive_more = { workspace = true, features = ["as_ref", "from", "constructor"] }
futures = { workspace = true, features = ["std"] }
itertools.workspace = true
jsonwebtoken.workspace = true
parking_lot = { workspace = true, optional = true }
p256 = { workspace = true, features = ["ecdsa"] }
serde = { workspace = true, features = ["derive"] }
thiserror.workspace = true

rand_core = { workspace = true, optional = true }

crypto = { path = "../crypto/", features = ["mock"] }
jwt.path = "../jwt"
utils.path = "../utils/"

[dev-dependencies]
assert_matches.workspace = true
parking_lot.workspace = true
rand_core.workspace = true
rstest.workspace = true
tokio = { workspace = true, features = ["macros"] }
