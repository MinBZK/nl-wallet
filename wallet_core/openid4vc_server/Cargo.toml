[package]
name = "openid4vc_server"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
exclude = ["resources"]

[lints]
workspace = true

[lib]
doctest = false

[features]
default = ["disclosure", "postgres"]
# Include session storage in PostgreSQL
postgres = ["dep:sea-orm", "dep:serde_json", "dep:strum"]
# Enable issuance
issuance = ["dep:axum-extra", "dep:serde_json"]
# Enable disclosure
disclosure = ["dep:ring", "dep:strum"]

[dependencies]
axum = { workspace = true, features = ["form", "http1", "json", "query", "tower-log", "tracing"] }
base64.workspace = true
cfg-if.workspace = true
chrono = { workspace = true, features = ["clock", "serde", "std"] }
derive_more = { workspace = true, features = ["as_ref", "from"] }
http.workspace = true
p256 = { workspace = true, features = ["ecdsa", "pkcs8"] }
rustls-pki-types.workspace = true
serde = { workspace = true, features = ["derive"] }
thiserror.workspace = true
tower-http = { workspace = true, features = ["auth", "cors", "set-header", "trace"] }
tracing.workspace = true
url = { workspace = true, features = ["serde"] }

axum-extra = { workspace = true, optional = true, features = ["typed-header"] }
ring = { workspace = true, optional = true }
sea-orm = { workspace = true, optional = true, features = [
    "macros",
    "runtime-tokio-rustls",
    "sqlx-postgres",
    "with-chrono",
    "with-json",
] }
serde_json = { workspace = true, optional = true }
strum = { workspace = true, optional = true, features = ["derive"] }

nl_wallet_mdoc.path = "../mdoc"
openid4vc = { path = "../openid4vc", features = ["axum"] }
sd_jwt.path = "../sd_jwt"
wallet_common = { path = "../wallet_common", features = ["axum"] }
